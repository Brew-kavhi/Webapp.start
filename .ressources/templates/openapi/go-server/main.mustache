{{>partial_header}}
package main

import (
	"log"
	"net/http"
	"github.com/rs/cors"
	"os"

	{{packageName}} "{{gitHost}}/{{gitUserId}}/{{gitRepoId}}/{{sourceFolder}}"
)

func main() {
	log.Printf("Server started")
	dbHandler :=&{{packageName}}.DBHandler{}
	dbHandler.InitConnection()
	dbHandler.AutoMigrate()
{{#apiInfo}}{{#apis}}
	{{classname}}Service := {{packageName}}.New{{classname}}Service(dbHandler)
	{{classname}}Controller := {{packageName}}.New{{classname}}Controller({{classname}}Service)
{{/apis}}{{/apiInfo}}
	c := cors.New(cors.Options{
		AllowedOrigins:   []string{os.Getenv("CORS_ORIGIN"), "http://localhost"}, // Allow your frontend
		AllowedMethods:   []string{"GET", "POST", "PUT", "DELETE"}, // Allow methods
		AllowedHeaders:   []string{"Authorization", "Content-Type"}, // Allow headers
		AllowCredentials: true, // Allow cookies, tokens
	})
	router := {{packageName}}.NewRouter({{#apiInfo}}{{#apis}}{{classname}}Controller{{^-last}}, {{/-last}}{{/apis}}{{/apiInfo}})

	log.Fatal(http.ListenAndServe(":{{serverPort}}", secureHeadersMiddleware(checkAuthMiddleware(c.Handler(router)))))
}
